{# dashboard.html.twig #}

{% extends 'base.html.twig' %}

{% block title %}Statistics{% endblock %}

{% block body %}
    <div>
        <canvas id="adminsClientsChart" width="400" height="400"></canvas>
    </div>
    <div>
        <canvas id="salaryAgeChart" width="400" height="400"></canvas>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Code to fetch statistics data from the server and render charts using Chart.js
        // You'll need to adapt this according to your API endpoint and data structure

        fetch('/statistics')
            .then(response => response.json())
            .then(data => {
                // Render pie chart for admins and clients
                var adminsClientsChart = new Chart(document.getElementById('adminsClientsChart'), {
                    type: 'pie',
                    data: {
                        labels: ['Admins', 'Clients'],
                        datasets: [{
                            label: 'Admins vs Clients',
                            data: [data.admins_count, data.clients_count],
                            backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)'],
                        }],
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                    },
                });

                // Render bar chart for average salary by age group
                var salaryAgeChart = new Chart(document.getElementById('salaryAgeChart'), {
                    type: 'bar',
                    data: {
                        labels: data.average_salaries_by_age_group.map(entry => entry.age_group),
                        datasets: [{
                            label: 'Average Salary by Age Group',
                            data: data.average_salaries_by_age_group.map(entry => entry.average_salary),
                            backgroundColor: 'rgba(255, 159, 64, 0.2)',
                            borderColor: 'rgba(255, 159, 64, 1)',
                            borderWidth: 1,
                        }],
                    },
                    options: {
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true,
                                },
                            }],
                        },
                        responsive: true,
                        maintainAspectRatio: false,
                    },
                });
            });
    </script>
{% endblock %}
